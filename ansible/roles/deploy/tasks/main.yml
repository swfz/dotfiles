---
- name: command directory
  file:
    path: "{{ command_dir }}"
    state: directory

- name: set git config
  template:
    src: config.j2
    dest: ~/.gitconfig
    owner: "{{ user }}"
    mode: 0644

- name: clone git repository
  git:
    repo: "{{ dotfiles.src.repo }}"
    dest: "{{ dotfiles.dest }}"
    clone: yes
    update: yes
    force: yes

- name: symlink peco config
  file:
    path: "~/.config/peco"
    state: directory

- name: symlink peco config
  file:
    src: "{{ dotfiles.dest }}/config/peco/config.json"
    dest: "~/.config/peco/config.json"
    state: link

- name: symlink bat config
  file:
    path: "~/.config/bat"
    state: directory

- name: symlink bat config
  file:
    src: "{{ dotfiles.dest }}/config/bat/config"
    dest: "~/.config/bat/config"
    state: link

- name: store bin path to zshenv
  lineinfile:
    dest: ~/.zshenv
    state: present
    create: yes
    line: "{{ item }}"
  with_items:
    - 'export PATH="$HOME/dotfiles/bin:$PATH"'

- name: symlink dotfiles
  file:
    src: "{{ dotfiles.dest }}/{{ item }}"
    dest: "~/{{ item }}"
    state: link
  with_items: "{{ dotfiles.files }}"

- name: symlink base color
  file:
    src: "{{ dotfiles.dest }}/powerline_theme/base_colorscheme_{{ base_color }}.json"
    dest: "{{ link.base.target_dir }}/{{ link.base.target_file }}"
    state: link
    force: yes
  when: base_color is defined
  tags:
    - color

- name: symlink zsh color
  file:
    src: "{{ dotfiles.dest }}/zsh/.color.{{ zsh_color }}"
    dest: "~/.zshrc.color"
    state: link
    force: yes
  when: zsh_color is defined
  tags:
    - color

- name: symlink zsh color for powerline(custom)
  file:
    src: "{{ dotfiles.dest }}/powerline_theme/shell_colorscheme_{{ zsh_color }}.json"
    dest: "{{ link.zsh.target_dir }}/{{ link.zsh.target_file }}"
    state: link
    force: yes
  when: zsh_color is defined and zsh_color != 'solarized'
  tags:
    - color

- name: symlink zsh color for powerline(solarized)
  file:
    src: "{{ link.zsh.target_dir }}/solarized.json"
    dest: "{{ link.zsh.target_dir }}/{{ link.zsh.target_file }}"
    state: link
    force: yes
  when: zsh_color is defined and zsh_color == 'solarized'
  tags:
    - color

- name: symlink tmux powerline config
  file:
    src: "{{ link.tmux.basedir }}/{{ item }}"
    dest: "~/.tmux-{{ item }}"
    state: link
    force: yes
  with_items: "{{ link.tmux.files }}"

# TODO tmuxのカラー設定
# .anyenv/envs/pyenv/versions/3.5.2/lib/python3.5/site-packages/powerline/config_files/colorschemes/tmux/default.json

- name: .vim directory
  file:
    path: "~/.vim"
    state: directory

- name: symlink vim snippet
  file:
    src: "{{ dotfiles.dest }}/.vim/snippets"
    dest: ~/.vim/snippets
    state: link

- name: symlink sshrc.d
  file:
    src: "{{ dotfiles.dest }}/.sshrc.d"
    dest: ~/.sshrc.d
    state: link
