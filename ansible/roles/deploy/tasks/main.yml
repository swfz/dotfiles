---
- name: Command directory
  ansible.builtin.file:
    path: "{{ command_dir }}"
    state: directory
    mode: "0755"

- name: Set git config
  ansible.builtin.template:
    src: config.j2
    dest: ~/.gitconfig
    owner: "{{ user }}"
    mode: "0644"

- name: Clone dotfiles repository
  ansible.builtin.git:
    repo: "{{ dotfiles.src.repo }}"
    dest: "{{ dotfiles.dest }}"
    clone: true
    update: true
    force: true

- name: Symlink peco config
  ansible.builtin.file:
    path: ~/.config/peco
    state: directory
    mode: "0755"

- name: Symlink peco config
  ansible.builtin.file:
    src: "{{ dotfiles.dest }}/config/peco/config.json"
    dest: ~/.config/peco/config.json
    state: link

- name: Symlink bat config
  ansible.builtin.file:
    path: ~/.config/bat
    state: directory
    mode: "0755"

- name: Symlink bat config
  ansible.builtin.file:
    src: "{{ dotfiles.dest }}/config/bat/config"
    dest: ~/.config/bat/config
    state: link

- name: Store bin path to zshenv
  ansible.builtin.lineinfile:
    dest: ~/.zshenv
    state: present
    create: true
    line: "{{ item }}"
    mode: "0644"
  with_items:
    - export PATH="$HOME/dotfiles/bin:$PATH"

- name: Symlink dotfiles
  ansible.builtin.file:
    src: "{{ dotfiles.dest }}/{{ item }}"
    dest: ~/{{ item }}
    state: link
  with_items: "{{ dotfiles.files }}"

- name: Symlink base color
  ansible.builtin.file:
    src: "{{ dotfiles.dest }}/powerline_theme/base_colorscheme_{{ base_color }}.json"
    dest: "{{ link.base.target_dir }}/{{ link.base.target_file }}"
    state: link
    force: true
  when: base_color is defined
  tags:
    - color

- name: Symlink zsh color
  ansible.builtin.file:
    src: "{{ dotfiles.dest }}/zsh/.color.{{ zsh_color }}"
    dest: ~/.zshrc.color
    state: link
    force: true
  when: zsh_color is defined
  tags:
    - color

- name: Symlink zsh color for powerline(custom)
  ansible.builtin.file:
    src: "{{ dotfiles.dest }}/powerline_theme/shell_colorscheme_{{ zsh_color }}.json"
    dest: "{{ link.zsh.target_dir }}/{{ link.zsh.target_file }}"
    state: link
    force: true
  when: zsh_color is defined and zsh_color != 'solarized'
  tags:
    - color

- name: Symlink zsh color for powerline(solarized)
  ansible.builtin.file:
    src: "{{ link.zsh.target_dir }}/solarized.json"
    dest: "{{ link.zsh.target_dir }}/{{ link.zsh.target_file }}"
    state: link
    force: true
  when: zsh_color is defined and zsh_color == 'solarized'
  tags:
    - color

- name: Symlink tmux powerline config
  ansible.builtin.file:
    src: "{{ link.tmux.basedir }}/{{ item }}"
    dest: ~/.tmux-{{ item }}
    state: link
    force: true
  with_items: "{{ link.tmux.files }}"

# TODO tmuxのカラー設定
# .anyenv/envs/pyenv/versions/3.5.2/lib/python3.5/site-packages/powerline/config_files/colorschemes/tmux/default.json

- name: .vim directory
  ansible.builtin.file:
    path: ~/.vim
    state: directory
    mode: "0755"

- name: Symlink vim snippet
  ansible.builtin.file:
    src: "{{ dotfiles.dest }}/.vim/snippets"
    dest: ~/.vim/snippets
    state: link

- name: Symlink sshrc.d
  ansible.builtin.file:
    src: "{{ dotfiles.dest }}/.sshrc.d"
    dest: ~/.sshrc.d
    state: link

# git-hooksのセットアップ
- name: Clone git-hooks repository
  ansible.builtin.git:
    repo: "{{ git_hooks.src.repo }}"
    dest: "{{ git_hooks.dest }}"
    clone: true
    update: true
    force: true
