- name: install anyenv
  git: repo="{{ anyenv.url }}" dest=~/.anyenv

- name: store anyenv profile to zshenv
  lineinfile:
    dest: ~/.zshenv
    state: present
    create: yes
    line: "{{ item }}"
  with_items:
    - 'export PATH="$HOME/.anyenv/bin:$PATH"'
    - 'eval "$(anyenv init -)"'

- name: exist {{ item.name }}
  command: which {{ item.name }}
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH}}"
  register: exist_envs
  changed_when: false
  ignore_errors: true
  with_items: "{{ envs }}"

- name: install envs {{ item.0 }}
  command: anyenv install {{ item.0 }}
  when: item.1.rc != 0
  with_together:
    - "{{ envs }}"
    - "{{ exist_envs.results }}"

- name: store {{ item.name }} to zshenv
  lineinfile:
    dest: ~/.zshenv
    state: present
    create: yes
    line: 'export PATH="$HOME/.anyenv/envs/{{ item.name }}/shims:$PATH"'
  with_items: "{{ envs }}"

- name: "exist version {{ item.name }} {{ item.version }}"
  shell: "{{ item.name }} versions | grep {{ item.version }}"
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH}}"
  register: exist_version
  changed_when: false
  ignore_errors: true
  with_items: "{{ envs }}"

- name: "install {{ item.0.name }} {{ item.0.version }}"
  command: "{{ item.0.name }} install {{ item.0.version }}"
  when: item.1.rc != 0
  with_together:
    - "{{ envs }}"
    - "{{ exist_version.results }}"

- name: "exist global {{ item.name }} {{ item.version }}"
  command: "{{ item.name }} global"
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH}}"
  register: exist_global
  changed_when: false
  ignore_errors: true
  with_items: "{{ envs }}"

- name: "set global {{ item.0.name }} {{ item.0.version }}"
  command: "{{ item.0.name }} global {{ item.0.version }}"
  when: item.1.stdout is defined and item.1.stdout.find(item.0.version) == -1
  with_together:
    - "{{ envs }}"
    - "{{ exist_global.results }}"


