---
- name: install anyenv
  git: repo="{{ anyenv.url }}" dest=~/.anyenv

- name: store anyenv profile to zshenv
  lineinfile:
    dest: ~/.zshenv
    state: present
    mode: 0644
    create: yes
    line: "{{ item }}"
  with_items:
    - 'export PATH="$HOME/.anyenv/bin:$PATH"'
    - 'eval "$(anyenv init - zsh)"'

- name: check init
  stat:
    path: "{{ ansible_env.HOME }}/.config/anyenv/anyenv-install"
  register: anyenv_install_dir

- name: init
  expect:
    command: "{{ ansible_env.HOME }}/.anyenv/libexec/anyenv install --init"
    responses:
      '.*Do you want to checkout.*': y
  when: not anyenv_install_dir.stat.exists

- name: "exist envs"
  shell: "{{ execute }} 'command -v {{ item.key }}'"  # noqa command-instead-of-shell
  register: exist_envs
  changed_when: false
  ignore_errors: true
  with_dict: "{{ envs }}"

- name: "install envs"
  shell: "{{ execute }} 'anyenv install {{ item.0 }}'"  # noqa command-instead-of-shell
  when: item.1.rc != 0
  with_together:
    - "{{ envs }}"
    - "{{ exist_envs.results }}"

- name: "store envs path to zshenv"
  lineinfile:
    dest: ~/.zshenv
    state: present
    mode: 0644
    create: yes
    line: 'export PATH="$HOME/.anyenv/envs/{{ item.key }}/shims:$HOME/.anyenv/envs/{{ item.key }}/bin:$PATH"'
  with_dict: "{{ envs }}"

# pyenvと競合しているよう、pyenvの2022-04-30 からの差分でなにか影響のある修正がされているのかrbenvで必要な環境変数が削除されてしまっているため手動で追加
- name: "workaround"
  lineinfile:
    dest: ~/.zshenv
    state: present
    mode: 0644
    create: yes
    line: '{{ item }}'
  with_items:
    - 'export RBENV_ROOT=$HOME/.anyenv/envs/rbenv'
    - 'export RBENV_SHELL=zsh'

- name: "nodenv default packages"
  copy:
    src: nodenv-default-packages
    dest: "$HOME/.anyenv/envs/nodenv/default-packages"
    mode: 0644

- name: "exist version in every envs"
  shell: "{{ execute }} '{{ item.key }} versions | grep {{ item.value.version }}'"  # noqa command-instead-of-shell
  register: exist_version
  changed_when: false
  ignore_errors: true
  with_dict: "{{ envs }}"

- name: "install envs version"
  shell: "{{ execute }} '{{ item.0 }} install {{ envs[item.0].version }}'"  # noqa command-instead-of-shell
  when: item.1.rc != 0
  async: 600
  poll: 0
  register: async_status
  with_together:
    - "{{ envs }}"
    - "{{ exist_version.results }}"

- name: "wait install envs version"
  async_status:
    jid: "{{ item.ansible_job_id }}"
  loop: "{{ async_status.results }}"
  register: async_polling_results
  until: async_polling_results.finished
  retries: 60
  delay: 10

- name: "exist global envs version"
  shell: "{{ execute }} '{{ item.key }} global'"  # noqa command-instead-of-shell
  when: item.key != "goenv"
  register: exist_global
  changed_when: false
  ignore_errors: true
  with_dict: "{{ envs }}"

- name: "set global envs version"
  shell: "{{ execute }} '{{ item.0 }} global {{ envs[item.0].version }}'"  # noqa command-instead-of-shell
  when: item.1.stdout is defined and item.1.stdout.find(envs[item.0].version) == -1 and item.0 != 'goenv'
  with_together:
    - "{{ envs }}"
    - "{{ exist_global.results }}"
