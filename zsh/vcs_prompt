#VCS status to RPROMPT
zstyle ':vcs_info:*' max-exports 3
zstyle ':vcs_info:*' enable git svn
# misc(%m)
zstyle ':vcs_info:*' formats '(%s)-[%b]'
zstyle ':vcs_info:*' actionformats '(%s)-[%b]' '%m' '<!%a>'
zstyle ':vcs_info:svn:*' formats '${VCS_CUR}(%s)${RESET}-${VCS_MOD}[%b]${RESET} ${VCS_ERR}%u${RESET}'
zstyle ':vcs_info:svn+set-message:*' hooks svn-extra-info


if is-at-least 4.3.10; then
    # git
    zstyle ':vcs_info:git:*' formats '(%s)-[%b]' '%c%u %m'
    zstyle ':vcs_info:git:*' actionformats '(%s)-[%b]' '%c%u %m' '<!%a>'
    zstyle ':vcs_info:git:*' check-for-changes true
    zstyle ':vcs_info:git:*' stagedstr "+"    # %c
    zstyle ':vcs_info:git:*' unstagedstr "-"  # %u
fi

# hooks
if is-at-least 4.3.11; then
    # formats '(%s)-[%b]' '%c%u %m' , actionformats '(%s)-[%b]' '%c%u %m' '<!%a>'
    zstyle ':vcs_info:git+set-message:*' hooks \
                                            git-hook-begin \
                                            git-untracked \
                                            git-push-status \
                                            git-nomerge-branch \
                                            git-stash-count
    function +vi-git-hook-begin() {
        if [[ $(command git rev-parse --is-inside-work-tree 2> /dev/null) != 'true' ]]; then
            return 1
        fi
        return 0
    }

    function +vi-git-untracked() {
        if [[ "$1" != "1" ]]; then
            return 0
        fi

        if command git status --porcelain 2> /dev/null \
            | awk '{print $1}' \
            | command grep -F '??' > /dev/null 2>&1 ; then

            # unstaged (%u)
            hook_com[unstaged]+='?'
        fi
    }

    function +vi-git-push-status() {
        if [[ "$1" != "1" ]]; then
            return 0
        fi

        if [[ "${hook_com[branch]}" != "master" ]]; then
            return 0
        fi

        local ahead
        ahead=$(command git rev-list origin/master..master 2>/dev/null \
            | wc -l \
            | tr -d ' ')

        if [[ "$ahead" -gt 0 ]]; then
            # misc (%m)
            hook_com[misc]+="(p${ahead})"
        fi
    }

    # (mN) to misc (%m)
    function +vi-git-nomerge-branch() {
        if [[ "$1" != "1" ]]; then
            return 0
        fi

        if [[ "${hook_com[branch]}" == "master" ]]; then
            return 0
        fi

        local nomerged
        nomerged=$(command git rev-list master..${hook_com[branch]} 2>/dev/null | wc -l | tr -d ' ')

        if [[ "$nomerged" -gt 0 ]] ; then
            # misc (%m)
            hook_com[misc]+="(m${nomerged})"
        fi
    }

    # stash  :SN to misc (%m)
    function +vi-git-stash-count() {
        if [[ "$1" != "1" ]]; then
            return 0
        fi

        local stash
        stash=$(command git stash list 2>/dev/null | wc -l | tr -d ' ')
        if [[ "${stash}" -gt 0 ]]; then
            # misc (%m)
            hook_com[misc]+=":S${stash}"
        fi
    }
fi

function _update_vcs_info_msg() {
    local -a messages
    local prompt

    LANG=en_US.UTF-8 vcs_info

    if [[ -z ${vcs_info_msg_0_} ]]; then
        prompt=""
    else
        # $vcs_info_msg_0_ , $vcs_info_msg_1_ , $vcs_info_msg_2_
        [[ -n "$vcs_info_msg_0_" ]] && messages+=( "${VCS_CUR}${vcs_info_msg_0_}${RESET}" )
        [[ -n "$vcs_info_msg_1_" ]] && messages+=( "${VCS_MOD}${vcs_info_msg_1_}${RESET}" )
        [[ -n "$vcs_info_msg_2_" ]] && messages+=( "${VCS_ERR}${vcs_info_msg_2_}${RESET}" )

        #join separated space
        prompt="${(j: :)messages}"
    fi
    plenv=`plenv_version`
    rbenv=`rbenv_version`
    ndenv=`ndenv_version`
    nodenv=`nodenv_version`
    pyenv=`pyenv_version`
    RPROMPT="${ENV_PL}${plenv} ${ENV_RB}${rbenv} ${ENV_ND}${ndenv} ${ENV_ND}${nodenv} ${ENV_PY}${pyenv}${RESET} ${prompt}"
    #RPROMPT="${ENV_PL}${plenv} ${RESET} ${prompt}"
}

function count_svn_st() {
  svn st | awk '{ c[$1] += 1; } END{for (k in c) {printf "%s:%s ", k, c[k]}}'
}
function +vi-svn-extra-info() {
#  if [[ "$1" != "1" ]]; then
#    return 0
#  fi

  hook_com[unstaged]+=`count_svn_st`
}

add-zsh-hook precmd _update_vcs_info_msg
#====== VCS status to RPROMPT


