# peco
function peco-select-history() {
    local tac
    if which tac > /dev/null; then
        tac="tac"
    else
        tac="tail -r"
    fi
    BUFFER=$(\history -n 1 | \
        eval $tac | \
        peco --query "$LBUFFER")
    CURSOR=$#BUFFER
    zle clear-screen
}
zle -N peco-select-history
bindkey '^r' peco-select-history

function agvim () {
  vim $(ag $@ | peco --query "$LBUFFER" | awk -F : '{print "-c " $2 " " $1}')
}

function csp () {
  unset CHEATCOLORS
  BUFFER=$( cheat $1 | grep -v '^#' | peco --query "$LBUFFER" )
  print -z "$BUFFER"
  export CHEATCOLORS=true
}

function tvi () {
  vim $( tree --charset=o -f $1 | peco | tr -d '\||`|-' )
}

function aliasp () {
  BUFFER=$(alias | peco --query "$LBUFFER" | awk -F"=" '{print $1}')
  print -z "$BUFFER"
}

function ssh-peco () {
  ssh $(grep --color=no 'Host ' ~/.ssh/config | peco | awk '{print $2}')
}

function peco-p() {
  selected=$@
  if [ -n "$selected" ]; then
    BUFFER="${BUFFER}${selected}"
    # カーソル位置を末尾に移動
    CURSOR=$#BUFFER
  fi
}

# git branchを選択
function peco-git-branch () {
  local selected_branch_name="$(git branch -a | peco | tr -d ' ' | tr -d '*')"
  case "$selected_branch_name" in
    *-\>* )
      selected_branch_name="$(echo ${selected_branch_name} | perl -ne 's/^.*->(.*?)\/(.*)$/\2/;print')";;
    remotes* )
      selected_branch_name="$(echo ${selected_branch_name} | perl -ne 's/^.*?remotes\/(.*?)\/(.*)$/\2/;print')";;
  esac
  peco-p ${selected_branch_name}
}
zle -N peco-git-branch
bindkey '^gb' peco-git-branch

# commit hashを選択
function peco-git-hash () {
  local git_hash="$(git log --oneline --branches --pretty='format:%C(yellow)%h %C(green)%cd %C(blue)%an%C(red)%d %C(reset)%s' | peco | awk '{print $1}')"
  peco-p ${git_hash}
}
zle -N peco-git-hash
bindkey '^gh' peco-git-hash

# プロセスIDを取得
function peco-ps () {
  local process_id="$(ps auxf | peco | awk 'BEGIN {ORS=" "}; {print $2}')"
  peco-p ${process_id}
}
zle -N peco-ps
bindkey '^gps' peco-ps

# git stのファイルを(複数)選択
function peco-git-files () {
  local git_files="$(git status -sb | peco | awk 'BEGIN {ORS=" "}; {print $2}')"
  peco-p ${git_files}
}
zle -N peco-git-files
bindkey '^gf' peco-git-files

# git sash のリストから選択
function peco-git-stash () {
  local stash="$(git stash list | peco | awk -F'[ :]' '{print $1}')"
  peco-p ${stash}
}
zle -N peco-git-stash
bindkey '^gs' peco-git-stash

# gh issue のリストから選択
function peco-gh-issue () {
  local issues="$(gh issue list | peco | awk -F'[ ]' 'BEGIN{FS="\t"}{print $1}')"
  peco-p ${issues}
}
zle -N peco-gh-issue
bindkey '^gi' peco-gh-issue

# gh pr のリストから選択
function peco-gh-pr () {
  local prs="$(gh pr list | peco | awk -F'[ ]' 'BEGIN{FS="\t"}{print $1}')"
  peco-p ${prs}
}
zle -N peco-gh-pr
bindkey '^gpr' peco-gh-pr

# gh run のリストからIDを選択
function peco-gh-run () {
  local runs="$(gh run list | peco | awk -F'[ ]' 'BEGIN{FS="\t"}{print $7}')"
  peco-p ${runs}
}
zle -N peco-gh-run
bindkey '^gr' peco-gh-run

