---
name: update versions

on:
  push:
    paths:
      - '.github/workflows/update-versions.yml'
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * SAT'

jobs:
  versions-update:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        role:
          - name: docker
            repo: docker/docker-ce
            type: beta-rc
          - name: vim
            repo: vim/vim
            type: from-tag
          - name: jo
            repo: jpmens/jo
            type: prefix
          - name: q
            repo: harelba/q
            type: from-tag
          - name: terraform
            repo: hashicorp/terraform
            type: from-tag
          - name: zsh
            repo: zsh-users/zsh
            type: from-tag
          - name: tmux
            repo: tmux/tmux
            type: prefix
    steps:
      - uses: actions/checkout@v4.1.1
      - name: install yq
        run: |
          sudo add-apt-repository ppa:rmescandon/yq
          sudo apt install -y yq
          yq --version

      - id: check
        name: check require update
        run: |
          got=`yq e .${{ matrix.role.name }}_version ./ansible/versions_vars.yml`
          latest=`./.github/workflows/bin/latest-version-${{ matrix.role.type }}.sh ${{ matrix.role.repo }}`

          echo "got=$got" >> $GITHUB_OUTPUT
          echo "latest=$latest" >> $GITHUB_OUTPUT

          if [[ "$got" != "$latest" ]]; then
            echo "found ahead versions"
            yq e ".${{ matrix.role.name }}_version=\"$latest\"" ./ansible/versions_vars.yml > versions.yml
            cp versions.yml ./ansible/versions_vars.yml
            branch="versionup/${{ matrix.role.name }}-to-$latest"
            echo "branch=$branch" >> $GITHUB_OUTPUT
          fi

      - if: steps.check.outputs.branch
        id: exist_branch
        name: check exist branch
        run: |
          git fetch
          count=`git branch -a | grep ${{ steps.check.outputs.branch }} | wc -l`
          echo "count=$count" >> $GITHUB_OUTPUT

      # 対象バージョンがかぶっている場合（ブランチが存在する場合）は以後の処理は行わない
      - if: steps.check.outputs.branch && steps.exist_branch.outputs.count == 0
        name: push to new branch
        run: |
          git config --global user.email ${{ secrets.GITHUB_EMAIL }}
          git config --global user.name ${{ secrets.GITHUB_USERNAME }}
          git checkout -b ${{ steps.check.outputs.branch }}
          git add ./ansible/versions_vars.yml
          git commit -m "[versionup] ${{ matrix.role.name }} ${{ steps.check.outputs.got }} to ${{ steps.check.outputs.latest }}"
          git push https://${GITHUB_USER_NAME}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:${{ steps.check.outputs.branch }}

      - if: steps.check.outputs.branch && steps.exist_branch.outputs.count == 0
        name: Generate token
        id: generate_token
        uses: actions/create-github-app-token@v1.6.0
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          owner: swfz
          repositories: dotfiles

      # personal tokenを使っているのはPR作ったらprに紐づくworkflowを発火させたいため
      # GITHUB_TOKENだと権限が足りない
      - if: steps.check.outputs.branch && steps.exist_branch.outputs.count == 0
        name: create pull request
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          REPO_ID: ${{ secrets.REPO_ID }}
        run: |
          ./.github/workflows/bin/create_pr.sh ${{ steps.check.outputs.branch }}

  slack-notify:
    if: always()
    needs: [versions-update]
    name: post slack
    runs-on: ubuntu-latest
    steps:
      - uses: Gamesight/slack-workflow-status@v1.2.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
